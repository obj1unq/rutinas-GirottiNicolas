import src.persona.*
import gimnasia.*
import club.*

describe "rutinas" {
	const correrEnLaPlaya = new Running(intensidad = 1.2)
	const remito = new Remo()
	const maratonBA = new Maraton(intensidad = 1.5)
	const remoPro = new RemoDeCompeticion()

	
	test "Running: Correr en la playa" {
		assert.equals(360, correrEnLaPlaya.caloriasQueQuema(5))
		assert.equals(10200, correrEnLaPlaya.caloriasQueQuema(90))

	}

	test "Maraton: Maraton de Buenos Aires" {
		assert.equals(900,maratonBA.caloriasQueQuema(5))
		assert.equals(25500,maratonBA.caloriasQueQuema(90))

	}

	test "Remo: Remar en el Delta" {
		assert.equals(520, remito.caloriasQueQuema(5))
		assert.equals(9360, remito.caloriasQueQuema(90))
	}

	test "Remo de competicion:  remar en el camino de los remeros " {
		assert.equals(510, remoPro.caloriasQueQuema(5))
		assert.equals(12750, remoPro.caloriasQueQuema(90))
	}
}

describe "Persona: Sedentarios" {
	const calamardo = new Sedentario(peso = 60, tiempo = 5)
	const correrEnLaPlaya = new Running(intensidad = 1.2)
	const maratonBA = new Maraton(intensidad = 1.5)
	const remito = new Remo()
	const remoPro = new RemoDeCompeticion()

	
	test "Calamardo corre en la playa" {
		calamardo.aplicar(correrEnLaPlaya)
		assert.equals(59.948, calamardo.peso())
	}
	test "Calamardo corre en BA" {
		calamardo.aplicar(maratonBA)
		assert.equals(59.871, calamardo.peso())
	}
	test "Calamardo rema en el delta" {
		calamardo.aplicar(remito)
		assert.equals(59.925, calamardo.peso())
	}
	test "Calamardo rema en los remeros" {
		calamardo.aplicar(remoPro)
		assert.equals(59.927, calamardo.peso())
	}

	test "Calamardo no puede hacer rutinas" {
		calamardo.peso(40)
		assert.throwsException({calamardo.aplicar(correrEnLaPlaya)})
	}
}


describe "Persona: Atletas" {
	const correrEnLaPlaya = new Running(intensidad = 1.2)
	const maratonBA = new Maraton(intensidad = 1.5)
	const remito = new Remo()
	const remoPro = new RemoDeCompeticion()
	const bob = new Atleta(peso = 40, tiempo = 90)
	test "Bob corre en la playa" {
		bob.aplicar(correrEnLaPlaya)
		assert.equals(39.725, bob.peso())
	}
	test "Bob maratonea" {
		bob.aplicar(maratonBA)
		assert.equals(37.812, bob.peso())
	}
	test "Bob rema tranqui" {
		
		assert.throwsException({ bob.aplicar(remito)})
		assert.equals(40, bob.peso())
	}
	test "Bob rema en los remeros" {
		bob.aplicar(remoPro)
		assert.equals(39.406, bob.peso())
	}
}


describe "Clubes" {
	const correrEnLaPlaya = new Running(intensidad = 1.2)
	const remito = new Remo()
	const maratonBA = new Maraton(intensidad = 1.5)
	const remoPro = new RemoDeCompeticion()


	const recreo = new Predio(rutinas = #{correrEnLaPlaya,maratonBA})
	const nautico = new Predio(rutinas = #{remito,remoPro})
	const bob = new Atleta(peso = 40, tiempo = 90)
	const calamardo = new Sedentario(peso = 60, tiempo = 5)

	const clubBarrial = new Club(predios = #{nautico,recreo})
  	test "Mejor predio para bob" {
		assert.equals(35700, recreo.caloriasTotales(bob))
		assert.equals(22110, nautico.caloriasTotales(bob))
  	}

	test "Mejor predio para Calamardo" {
		assert.equals(1260, recreo.caloriasTotales(calamardo))
		assert.equals(1030, nautico.caloriasTotales(calamardo))
  	}

	test "No hay predio tranqui para bob" {
		assert.that(clubBarrial.prediosTranquiPara(bob).isEmpty())
	}

	test "Predio tranqui para calamardo: recreo" {
		assert.equals(#{recreo}, clubBarrial.prediosTranquiPara(calamardo))
	}

	test "Rutinas mas exigentes para bob" {
		assert.equals(#{maratonBA,remoPro}, clubBarrial.rutinasMasExigentes(bob))
	}

	test "Rutinas mas exigentes para calamardo" {
		assert.equals(#{maratonBA,remito}, clubBarrial.rutinasMasExigentes(calamardo))

	}
}
//Punto 3: clubes
	//const recreo = //un predio con correrEnLaPlaya y maratonBA
	//const nautico = //un predio con remarEnElDelta y remarEnCaminoRemeros
	//const clubBarrial = //un club con recreo y nautico
//	
//
// PUNTO 1
//	test "1.1 consulta running" {
//		//correrEnLaPlaya deberia gastar 360 calorias al practicarse por 5 minutos
//		//correrEnLaPlaya deberia gastar 10200 calorias al practicarse por 90 minutos
//	}

//	test "1.2 consulta maraton" {
//		//maratonBA deberia gastar 900 calorias al practicarse por 5 minutos
//		//maratonBA deberia gastar 25500 calorias al practicarse por 90 minutos
//	}

//	test "1.3 consulta remo" {
//		//remarEnElDelta deberia gastar 520 calorias al practicarse por 5 minutos
//		//remarEnElDelta deberia gastar 9360 calorias al practicarse por 90 minutos
//	}

//	test "1.4 consulta remo competitivo" {
//		//remarEnCaminoRemeros deberia gastar 510 calorias al practicarse por 5 minutos
//		//remarEnCaminoRemeros deberia gastar 12750 calorias al practicarse por 90 minutos
//	}

//Punto 2: Personas
	//ATENCION: usar el metodo truncate(3) para truncar un numero a 3 decimales
	// Ej: 1.2345.truncate(3) -> devuelve 1.234 
	
//	test '2.1.1 test sedentario running' {
//		// hacer que calamardo practique correrEnLaPlaya
//		// el peso de calamardo debería ser 59.948 (truncado a 3 decimales)
//	} 
	
//	test '2.1.2 test sedentario maraton' {
//		// hacer que calamardo practique maratonBA
//		// el peso de calamardo debería ser 59.871 (truncado a 3 decimales)
//	} 

//	test '2.1.3 test sedentario remo' {
//		// hacer que calamardo practique remarEnElDelta
//		// el peso de calamardo debería ser 59.925 (truncado a 3 decimales)
//	} 

//	test '2.1.3 test sedentario remo competicion' {
//		// hacer que calamardo practique remarEnCaminoRemeros
//		// el peso de calamardo debería ser 59.927 (truncado a 3 decimales)
//	} 
	
//	test '2.1.5 test sedentario no puede practicar' {
//		// Hacer que el peso de calamardo sea 40
//		// hacer que calamardo practique correrEnLaPlaya (NO SE PUEDE!)
//		// el peso de calamardo debería ser 40 
//	} 
	
//	test "2.2.1 test atleta running" {
//		// hacer que bob practique correrEnLaPlaya
//		// el peso de bob debería ser 39.725 (truncado a 3 decimales)
//	 }

//	test "2.2.2 test atleta maraton" {
//		// hacer que bob practique maratonBA
//		// el peso de bob debería ser 37.812 (truncado a 3 decimales)
//	 }

//	test "2.2.3 test atleta remo" {
//		// hacer que bob practique remarEnElDelta( NO SE PUEDE!)
//		// el peso de bob debería ser 40 
//	}

//	test "2.2.3 test atleta remo de competición" {
//		// hacer que bob practique remarEnCaminoRemeros
//		// el peso de bob debería ser 39.406
//	}
	 
//punto 3: Consultas
//	test "3.1 el mejor predio" {
//		//El mejor predio del clubBarrial para bob debería ser recreo		
//		//El mejor predio del clubBarrial para calamardo debería ser recreo		
//	}	
	
//	test "3.2 predios tranquis" {
//		//No debería haber predios tranquis en el clubBarrial para bob
//		//Los predios tranquis del clubBarrial para calamardo solo incluyen a recreo  
//	}
	
//	test "3.3 rutinas más exigentes" {
//		//Las rutinas más exigentes del clubBarrial para bob son maratonBA y remarEnCaminoRemeros
//		//Las rutinas más exigentes del clubBarrial para calamardo son maratonBA y remarEnElDelta
//	}
	
